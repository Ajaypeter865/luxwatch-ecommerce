<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>Customers Management | Watch Shop</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;500;600;700&display=swap" rel="stylesheet">

    <link rel="stylesheet" href="/css/admin-sidebar.css">
    <link rel="stylesheet" href="/css/admin-dashboard.css">
    <link rel="stylesheet" href="/css/admin-customers.css">
</head>

<body>
    <%- include('../partials/user/_toastify', { success: success, error: error }) %>
    <%- include('../partials/admin/_sidebar', { activePage: 'customers' }) %>

    <main class="admin-main">
        <div class="container-fluid py-4">
            <div class="d-flex justify-content-between align-items-center mb-4 flex-wrap gap-3">
                <h2 class="fw-bold text-dark mb-0">Customer Management</h2>
                <div></div>
            </div>

            <div class="d-flex justify-content-between align-items-center mb-3 flex-wrap gap-3">
                <div class="d-flex align-items-center gap-2">
                    <input id="customerSearch" type="text" class="form-control search-input"
                        placeholder="Search by name, email or phone">
                    <select id="statusFilter" class="form-select status-filter">
                        <option value="All">All Status</option>
                        <option value="Active">Active</option>
                        <option value="Blocked">Blocked</option>
                        <option value="Verified">Verified</option>
                    </select>
                </div>
                <div></div>
            </div>

            <div class="card shadow-sm">
                <div class="card-body p-0">
                    <table class="table table-hover align-middle mb-0">
                        <thead class="table-header">
                            <tr>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Phone</th>
                                <th>Address</th>
                                <th>Status</th>
                                <th>Total Orders</th>
                                <th>Last Order</th>
                                <th>Actions</th>
                            </tr>
                        </thead>

                        <tbody id="customerTableBody">
                            <% if (customers && customers.length > 0) { %>
                                <% customers.forEach((customer, i)=> { 
                                    const isBlocked = customer.status === 'Blocked';
                                    const newStatus = isBlocked ? 'Active' : 'Blocked';
                                    const btnClass = isBlocked ? 'btn-unblock' : 'btn-block';
                                %>
                                <tr class="customer-row">
                                    <td data-label="ID"><%= i + 1 %></td>
                                    <td data-label="Name"><%= customer.name %></td>
                                    <td data-label="Email"><%= customer.email %></td>
                                    <td data-label="Phone"><%= customer.phone %></td>
                                    <td data-label="Address"><%= customer.address %></td>
                                    <td data-label="Status" data-status="<%= customer.status %>">
                                        <span
                                            class="badge <%= customer.status === 'Active' ? 'bg-success' : (customer.status === 'Verified' ? 'bg-primary' : 'bg-danger') %>">
                                            <%= customer.status %>
                                        </span>
                                    </td>

                                    <td data-label="Total Orders"><%= customer.totalOrders ?? '—' %></td>
                                    <td data-label="Last Order"><%= customer.lastOrder ?? '—' %></td>

                                    <td data-label="Actions">
                                        <div class="action-buttons-container">
                                            <form action="/admin/customers/toggle-status/<%= customer._id %>" method="POST" class="d-inline">
                                                <input type="hidden" name="status" value="<%= newStatus %>">
                                                
                                                <button class="btn btn-sm <%= btnClass %>" type="submit" title="<%= isBlocked ? 'Set Active' : 'Block Customer' %>">
                                                    <i class="fas <%= isBlocked ? 'fa-check' : 'fa-ban' %>"></i>
                                                </button>
                                            </form>
                                            
                                            <form action="/admin/customers/delete/<%= customer._id %>" method="POST" class="d-inline" onsubmit="return confirm('Are you sure you want to delete this customer?');">
                                                <button class="btn btn-sm btn-delete" type="submit" title="Delete Customer">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                                <% }) %>
                            <% } else { %>
                                <tr id="noResultsRow">
                                    <td colspan="9" class="text-center text-muted py-4">No customers found</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
            
            <div class="d-flex justify-content-end mt-3">
                <nav>
                    <ul class="pagination pagination-sm mb-0" id="paginationControls">
                        </ul>
                </nav>
            </div>
            </div>
    </main>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const searchInput = document.getElementById('customerSearch');
            const statusFilter = document.getElementById('statusFilter');
            const tableBody = document.getElementById('customerTableBody');
            const paginationControls = document.getElementById('paginationControls');
            const rows = Array.from(document.querySelectorAll('.customer-row'));
            const rowsPerPage = 5;
            let currentPage = 1;
            let filteredRows = rows;
            
            function applyClientFilterAndPaginate() {
                const q = searchInput.value.trim().toLowerCase();
                const st = statusFilter.value;

                filteredRows = rows.filter(row => {
                    // Skip placeholder "no results" row
                    if (row.querySelectorAll('td').length === 1) return false;
                    
                    // Filter based on search query
                    const cells = row.querySelectorAll('td:not(:last-child)');
                    let rowText = Array.from(cells).map(td => td.textContent).join(' ').toLowerCase();
                    const matchSearch = q === '' || rowText.includes(q);

                    // Filter based on status
                    const statusCell = row.querySelector('td[data-status]');
                    const statusText = statusCell ? statusCell.getAttribute('data-status') : '';
                    const matchStatus = st === 'All' || statusText.toLowerCase() === st.toLowerCase();

                    return matchSearch && matchStatus;
                });
                
                // Reset to first page after filtering
                currentPage = 1;
                renderTableAndPagination();
            }

            function renderTableAndPagination() {
                const totalPages = Math.ceil(filteredRows.length / rowsPerPage);
                
                // Hide all rows initially
                rows.forEach(row => row.style.display = 'none');
                
                // Show "No customers found" if there are no results
                const noResultsRow = document.getElementById('noResultsRow');
                if (filteredRows.length === 0) {
                     if (!noResultsRow) {
                        // Create a "No Results" row if it doesn't exist
                        const newRow = tableBody.insertRow();
                        newRow.id = 'noResultsRow';
                        const cell = newRow.insertCell();
                        cell.setAttribute('colspan', '9');
                        cell.classList.add('text-center', 'text-muted', 'py-4');
                        cell.textContent = 'No customers found matching your criteria.';
                    } else {
                        noResultsRow.style.display = '';
                    }
                    paginationControls.innerHTML = '';
                    return;
                } else if (noResultsRow) {
                    noResultsRow.style.display = 'none';
                }

                // Calculate which rows to display for the current page
                const start = (currentPage - 1) * rowsPerPage;
                const end = start + rowsPerPage;
                
                filteredRows.slice(start, end).forEach(row => {
                    row.style.display = '';
                });
                
                // Build Pagination HTML
                paginationControls.innerHTML = '';
                
                if (totalPages > 1) {
                    const createPageItem = (page, text, disabled = false, active = false) => {
                        const li = document.createElement('li');
                        li.className = `page-item ${disabled ? 'disabled' : ''} ${active ? 'active' : ''}`;
                        
                        const a = document.createElement('a');
                        a.className = 'page-link';
                        a.href = '#';
                        a.textContent = text;
                        if (!disabled && !active) {
                            a.addEventListener('click', (e) => {
                                e.preventDefault();
                                currentPage = page;
                                renderTableAndPagination();
                            });
                        }
                        li.appendChild(a);
                        return li;
                    };
                    
                    // Previous button
                    paginationControls.appendChild(createPageItem(currentPage - 1, '«', currentPage === 1));
                    
                    // Page numbers
                    for (let i = 1; i <= totalPages; i++) {
                        paginationControls.appendChild(createPageItem(i, i.toString(), false, i === currentPage));
                    }
                    
                    // Next button
                    paginationControls.appendChild(createPageItem(currentPage + 1, '»', currentPage === totalPages));
                }
            }

            // Initial render
            applyClientFilterAndPaginate();

            // Attach event listeners
            if (searchInput) searchInput.addEventListener('input', applyClientFilterAndPaginate);
            if (statusFilter) statusFilter.addEventListener('change', applyClientFilterAndPaginate);
        });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>